version: "3.9"
services:
  xm-service:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      CONFIG_PATH: "/app/config.yaml" # Set the path to your config file as an environment variable
    volumes:
      - ./config.yaml:/app/config.yaml # Mount your local config file into the container
      # - ./wait-for-it.sh:/app/wait-for-it.sh # Add the wait-for-it script
    ports:
      - "8090:8090" # Expose the port to the host
    depends_on:
      - db # xm-service depends on the db service
    command: sh -c "./wait-for-it.sh db:5432 -- ./xm server" # Wait for the db service to be ready before starting

  db:
    container_name: xm-db-pg
    image: postgis/postgis:14-3.3-alpine
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - 5433:5432
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    restart: unless-stopped

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888

  kafka:
    image: wurstmeister/kafka:2.13-2.7.0
    platform: linux/amd64
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
